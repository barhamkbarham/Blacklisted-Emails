name: Add email to blacklist

permissions:
  issues: write
  pull-requests: write
  contents: write

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  add_email_to_blacklist:
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'opened' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Comment on the issue
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body":"We have received the issue. A repository collaborator or owner must `accept` or `reject` this request in the comments."}' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments

  process_decision:
    runs-on: ubuntu-latest
    if: ${{ github.event.comment.body != '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse issue content
        id: parse
        uses: onmax/issue-form-parser@v1.5
        with:
          issue_number: ${{ github.event.issue.number }}

      - name: Extract parsed data
        id: extract_email
        run: |
          EMAIL=$(echo '${{ steps.parse.outputs.payload }}' | jq -r '.email')
          TITLE=$(echo '${{ steps.parse.outputs.payload }}' | jq -r '.title')
          DATE=$(echo '${{ steps.parse.outputs.payload }}' | jq -r '.date')
          CONTENT=$(echo '${{ steps.parse.outputs.payload }}' | jq -r '.content')

          echo "email=$EMAIL" >> $GITHUB_ENV
          echo "title=$TITLE" >> $GITHUB_ENV
          echo "date=$DATE" >> $GITHUB_ENV
          echo "content=$CONTENT" >> $GITHUB_ENV

      - name: Extract comment command
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ "$COMMENT" == *"accept"* ]]; then
            echo "DECISION=accept" >> $GITHUB_ENV
          elif [[ "$COMMENT" == *"reject"* ]]; then
            echo "DECISION=reject" >> $GITHUB_ENV
          else
            echo "DECISION=none" >> $GITHUB_ENV
          fi

      - name: Proceed if accepted
        if: ${{ env.DECISION == 'accept' }}
        run: |
          TIMESTAMP=$(date +"%d.%m.%Y")

          # Update timestamp in LIST.txt
          sed -i "1s/.*/# Last update: $TIMESTAMP/" blacklist/LIST.txt

          # Add email to the end of LIST.txt
          echo "$EMAIL" >> blacklist/LIST.txt

      - name: Create email file in mails directory if accepted
        if: ${{ env.DECISION == 'accept' }}
        run: |
          mkdir -p blacklist/mails
          echo -e "**Title:** $TITLE\n\n**Date:** $DATE\n\n**Content:**\n\`\`\`text\n$CONTENT\n\`\`\`" > blacklist/mails/$EMAIL.md

      - name: Commit changes
        if: ${{ env.DECISION == 'accept' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add blacklist/LIST.txt blacklist/mails/
          git commit -m "Add $EMAIL to blacklist"
          git push

      - name: Post rejection comment if rejected
        if: ${{ env.DECISION == 'reject' }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body":"The request to add the email has been rejected."}' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments
