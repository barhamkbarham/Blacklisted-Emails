name: Add email to blacklist

permissions:
  issues: write
  pull-requests: write
  contents: write

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  add_email_to_blacklist:
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'opened' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract issue content
        id: extract_content
        run: |
          EMAIL=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=Email: ).*')
          TITLE=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=Title: ).*')
          DATE=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=Date: ).*')
          CONTENT=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=Content:\n).*')

          echo "EMAIL=$EMAIL" >> $GITHUB_ENV
          echo "TITLE=$TITLE" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV
          echo "CONTENT=$CONTENT" >> $GITHUB_ENV

      - name: Comment on the issue
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body":"We have received the issue. A repository collaborator or owner must `accept` or `reject` this request in the comments."}' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments

  process_decision:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'issue_comment' && github.event.action == 'created' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract comment command
        id: extract_command
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ "$COMMENT" == *"accept"* ]]; then
            echo "DECISION=accept" >> $GITHUB_ENV
          elif [[ "$COMMENT" == *"reject"* ]]; then
            echo "DECISION=reject" >> $GITHUB_ENV
          else
            echo "DECISION=none" >> $GITHUB_ENV
          fi

      - name: Proceed if accepted
        if: ${{ env.DECISION == 'accept' }}
        run: |
          EMAIL=${{ env.EMAIL }}
          TIMESTAMP=$(date +"%d.%m.%Y")

          # Update timestamp in LIST.txt
          sed -i "1s/.*/# Last update: $TIMESTAMP/" blacklist/LIST.txt

          # Add email to the end of LIST.txt
          echo "$EMAIL" >> blacklist/LIST.txt

      - name: Create email file in mails directory if accepted
        if: ${{ env.DECISION == 'accept' }}
        run: |
          mkdir -p blacklist/mails
          echo -e "**Title:** ${{ env.TITLE }}\n\n**Date:** ${{ env.DATE }}\n\n**Content:**\n\`\`\`plaintext\n${{ env.CONTENT }}\n\`\`\`" > blacklist/mails/${{ env.EMAIL }}.md

      - name: Commit changes
        if: ${{ env.DECISION == 'accept' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add blacklist/LIST.txt blacklist/mails/
          git commit -m "Add ${{ env.EMAIL }} to blacklist"
          git push

      - name: Post rejection comment if rejected
        if: ${{ env.DECISION == 'reject' }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body":"The request to add the email has been rejected."}' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments
